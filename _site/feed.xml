<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>48Game</title>
    <description>while(success!=try());</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 08 Sep 2015 00:50:07 +0800</pubDate>
    <lastBuildDate>Tue, 08 Sep 2015 00:50:07 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>发现一个蛮好玩的游戏以及一个不错的H5引擎</title>
        <description>&lt;h2 id=&quot;phaser&quot;&gt;Phaser&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://phaser.io/&quot;&gt;这是官网&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wtfgame&quot;&gt;WTFGAME&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://cafebabe.cc/resource/img/wtfgame.png&quot; alt=&quot;wtfgame&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cafebabe.cc/WTFGame/&quot;&gt;这就是那个很逗的游戏&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Sep 2015 00:00:00 +0800</pubDate>
        <link>/2015/09/03/%E5%8F%91%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%9B%AE%E5%A5%BD%E7%8E%A9%E7%9A%84%E6%B8%B8%E6%88%8F%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%94%99%E7%9A%84H5%E5%BC%95%E6%93%8E/</link>
        <guid isPermaLink="true">/2015/09/03/%E5%8F%91%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%9B%AE%E5%A5%BD%E7%8E%A9%E7%9A%84%E6%B8%B8%E6%88%8F%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%94%99%E7%9A%84H5%E5%BC%95%E6%93%8E/</guid>
        
        
        <category>html5</category>
        
      </item>
    
      <item>
        <title>图形学算法</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;判断点是否在矩形内&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  bool IsPointInRect(const Rect&amp;amp; rc, const Point&amp;amp; p)
   	{
   	    double xr = (p.x - rc.p1.x) * (p.x - rc.p2.x);
   	    double yr = (p.y - rc.p1.y) * (p.y - rc.p2.y);
   	    return ( (xr &amp;lt;= 0.0) &amp;amp;&amp;amp; (yr &amp;lt;= 0.0) );
   	}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;向量运算&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;叉乘&lt;/p&gt;

        &lt;p&gt;P × Q = x1&lt;em&gt;y2 - x2&lt;/em&gt;y1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;点乘&lt;/p&gt;

        &lt;p&gt;P·Q = x1&lt;em&gt;x2 + y1&lt;/em&gt;y2&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;快速排斥试验&lt;/p&gt;

    &lt;p&gt;设以线段 P1P2 为对角线的矩形为R1， 设以线段 Q1Q2 为对角线的矩形为R2，如果R1和R2不相交，则两线段不会有交点；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跨立试验&lt;/p&gt;

    &lt;p&gt;如果两线段相交，则两线段必然相互跨立对方，所谓跨立，指的是一条线段的两端点分别位于另一线段所在直线的两边。判断是否跨立，还是要用到矢量叉积的几何意义。以图3为例，若P1P2跨立Q1Q2 ，则矢量&lt;/p&gt;

    &lt;p&gt;( P1 - Q1 ) 和( P2 - Q1 )位于矢量( Q2 - Q1 )&lt;/p&gt;

    &lt;p&gt;的两侧，即：&lt;/p&gt;

    &lt;p&gt;( P1 - Q1 ) × ( Q2 - Q1 ) * ( P2 - Q1 ) × ( Q2 - Q1 ) &amp;lt; 0&lt;/p&gt;

    &lt;p&gt;上式可改写成：&lt;/p&gt;

    &lt;p&gt;( P1 - Q1 ) × ( Q2 - Q1 ) * ( Q2 - Q1 ) × ( P2 - Q1 ) &amp;gt; 0&lt;/p&gt;

    &lt;p&gt;当&lt;/p&gt;

    &lt;p&gt;( P1 - Q1 ) × ( Q2 - Q1 ) = 0&lt;/p&gt;

    &lt;p&gt;时，说明线段P1P2和Q1Q2共线（但是不一定有交点）。同理判断Q1Q2跨立P1P2的依据是：&lt;/p&gt;

    &lt;p&gt;( Q1 - P1 ) × ( P2 - P1 ) * ( Q2 - P1 ) × ( P2 - P1 ) &amp;lt; 0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;判断点是否在多边形内&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;bool IsPointInPolygon(const Polygon&amp;amp; py, const Point&amp;amp; pt)
 {
     assert(py.IsValid()); /*只考虑正常的多边形，边数&amp;gt;=3*/
	 
     int count = 0;
     LineSeg ll = LineSeg(pt, Point(-INFINITE, pt.y)); /*射线L*/
     for(int i = 0; i &amp;lt; py.GetPolyCount(); i++)
     {
         /*当前点和下一个点组成线段P1P2*/
         LineSeg pp = LineSeg(py.pts[i], py.pts[(i + 1) % py.GetPolyCount()]);
         if(IsPointOnLineSegment(pp, pt))
         {
             return true;
         }
	 
         if(!pp.IsHorizontal())
         {
             if((IsSameFloatValue(pp.ps.y, pt.y)) &amp;amp;&amp;amp; (pp.ps.y &amp;gt; pp.pe.y))
             {
                 count++;
             }
             else if((IsSameFloatValue(pp.pe.y, pt.y)) &amp;amp;&amp;amp; (pp.pe.y &amp;gt; pp.ps.y))
             {
                 count++;
             }
             else
             {
                 if(IsLineSegmentIntersect(pp, ll))
                 {
                     count++;
                 }
             }
         }
     }
	 
     return ((count % 2) == 1);
 }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;求多边形外包矩形&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; void GetPolygonEnvelopRect(const Polygon&amp;amp; py, Rect&amp;amp; rc)
 {
     assert(py.IsValid()); /*只考虑正常的多边形，边数&amp;gt;=3*/
	 
     double minx = py.pts[0].x;
     double maxx = py.pts[0].x;
     double miny = py.pts[0].y;
     double maxy = py.pts[0].y;
     for(int i = 1; i &amp;lt; py.GetPolyCount(); i++)
     {
         if(py.pts[i].x &amp;lt; minx)
             minx = py.pts[i].x;
         if(py.pts[i].x &amp;gt; maxx)
             maxx = py.pts[i].x;
         if(py.pts[i].y &amp;lt; miny)
             miny = py.pts[i].y;
         if(py.pts[i].y &amp;gt; maxy)
             maxy = py.pts[i].y;
     }
	 
     rc = Rect(minx, miny, maxx, maxy);
 }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 08 Aug 2015 00:00:00 +0800</pubDate>
        <link>/2015/08/08/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E7%AE%97%E6%B3%95/</link>
        <guid isPermaLink="true">/2015/08/08/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E7%AE%97%E6%B3%95/</guid>
        
        
        <category>算法</category>
        
      </item>
    
      <item>
        <title>Unity执行任意菜单</title>
        <description>&lt;pre&gt;&lt;code&gt;EditorApplication.ExecuteMenuItem
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 00:00:00 +0800</pubDate>
        <link>/2015/08/03/Unity%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E8%8F%9C%E5%8D%95/</link>
        <guid isPermaLink="true">/2015/08/03/Unity%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E8%8F%9C%E5%8D%95/</guid>
        
        
        <category>unity</category>
        
      </item>
    
      <item>
        <title>CatmullRom插值算法</title>
        <description>&lt;pre&gt;&lt;code&gt;Vector3f DDUtil::catmullRom(Vector3f P0, Vector3f P1, Vector3f P2, Vector3f P3, float t)  
{  
    float factor = 0.5;  
    Vector3f c0 = P1;  
    Vector3f c1 =  (P2 - P0) * factor;  
    Vector3f c2 =  (P2 - P1) * 3.f  -   (P3 - P1) * factor -  (P2 - P0)* 2.f * factor ;  
    Vector3f c3 =  (P2 - P1) * -2.f  +   (P3 - P1) * factor +  (P2 - P0) * factor;  
  
    Vector3f curvePoint = c3 * t * t * t + c2 * t * t + c1 * t + c0;  
  
    return curvePoint;  
}  
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 01 Aug 2015 00:00:00 +0800</pubDate>
        <link>/2015/08/01/cr/</link>
        <guid isPermaLink="true">/2015/08/01/cr/</guid>
        
        
        <category>算法</category>
        
      </item>
    
      <item>
        <title>Android禁止输入全屏</title>
        <description>&lt;pre&gt;&lt;code&gt;View.setImeOptions(EditorInfo.IME_FLAG_NO_FULLSCREEN|EditorInfo.IME_ACTION_DONE);
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 02 Jul 2015 00:00:00 +0800</pubDate>
        <link>/2015/07/02/%E5%AE%89%E5%8D%93%E7%A6%81%E6%AD%A2%E8%BE%93%E5%85%A5%E6%B3%95%E5%85%A8%E5%B1%8F/</link>
        <guid isPermaLink="true">/2015/07/02/%E5%AE%89%E5%8D%93%E7%A6%81%E6%AD%A2%E8%BE%93%E5%85%A5%E6%B3%95%E5%85%A8%E5%B1%8F/</guid>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>Android移动View</title>
        <description>&lt;pre&gt;&lt;code&gt;View CreateLayout(Context c,View cv)
{
	RelativeLayout relativeLayout = new RelativeLayout(c);
	ViewGroup.LayoutParams lp = new ViewGroup.MarginLayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
	relativeLayout.setLayoutParams(lp);
	relativeLayout.addView(cv);
	//ChangeHeight(cv,360);
	return relativeLayout;
}

void ChangeHeight(View cv,int offset)
{
	RelativeLayout.LayoutParams rp =(RelativeLayout.LayoutParams)cv.getLayoutParams();
	rp.bottomMargin = offset;
	rp.topMargin = -offset;
	cv.setLayoutParams(rp);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 02 Jul 2015 00:00:00 +0800</pubDate>
        <link>/2015/07/02/AndroidView/</link>
        <guid isPermaLink="true">/2015/07/02/AndroidView/</guid>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>MetaBall</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://blueve.me/archives/1070&quot;&gt;链接~&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Feb 2015 00:00:00 +0800</pubDate>
        <link>/2015/02/06/MetaBalls/</link>
        <guid isPermaLink="true">/2015/02/06/MetaBalls/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Gopm!</title>
        <description>&lt;p&gt;http://gopm.io/&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate>
        <link>/2014/11/04/gopm/</link>
        <guid isPermaLink="true">/2014/11/04/gopm/</guid>
        
        
        <category>other</category>
        
      </item>
    
      <item>
        <title>BehaviorTree</title>
        <description>&lt;h1 id=&quot;httpblogcsdnnetakaraarticledetails6084786&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/akara/article/details/6084786&quot;&gt;1&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;# &lt;a href=&quot;http://blog.csdn.net/fg5823820/article/details/8750606&quot;&gt;2&lt;/a&gt;
# &lt;a href=&quot;http://www.cnblogs.com/cnas3/archive/2011/08/14/2138445.html&quot;&gt;3&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Aug 2014 00:00:00 +0800</pubDate>
        <link>/2014/08/29/BehaviorTree/</link>
        <guid isPermaLink="true">/2014/08/29/BehaviorTree/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>fenye</title>
        <description>&lt;p&gt;(http://kingauthur.info/tech.html)&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0800</pubDate>
        <link>/2014/08/27/fenye/</link>
        <guid isPermaLink="true">/2014/08/27/fenye/</guid>
        
        
        <category>other</category>
        
      </item>
    
  </channel>
</rss>
